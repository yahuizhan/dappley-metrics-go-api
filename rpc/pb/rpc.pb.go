// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: github.com/yahuizhan/dappley-metrics-go-api/rpc/pb/rpc.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	pb3 "github.com/yahuizhan/dappley-metrics-go-api/core/block/pb"
	pb "github.com/yahuizhan/dappley-metrics-go-api/core/transaction/pb"
	pb2 "github.com/yahuizhan/dappley-metrics-go-api/core/utxo/pb"
	pb4 "github.com/yahuizhan/dappley-metrics-go-api/metrics/pb"
	pb1 "github.com/yahuizhan/dappley-metrics-go-api/network/pb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SetNodeConfigRequest_ConfigType int32

const (
	SetNodeConfigRequest_TX_POOL_LIMIT  SetNodeConfigRequest_ConfigType = 0
	SetNodeConfigRequest_BLK_SIZE_LIMIT SetNodeConfigRequest_ConfigType = 1
	SetNodeConfigRequest_MAX_CONN_OUT   SetNodeConfigRequest_ConfigType = 2
	SetNodeConfigRequest_MAX_CONN_IN    SetNodeConfigRequest_ConfigType = 3
	SetNodeConfigRequest_MAX_PRODUCERS  SetNodeConfigRequest_ConfigType = 4
	SetNodeConfigRequest_PRODUCERS      SetNodeConfigRequest_ConfigType = 5
)

// Enum value maps for SetNodeConfigRequest_ConfigType.
var (
	SetNodeConfigRequest_ConfigType_name = map[int32]string{
		0: "TX_POOL_LIMIT",
		1: "BLK_SIZE_LIMIT",
		2: "MAX_CONN_OUT",
		3: "MAX_CONN_IN",
		4: "MAX_PRODUCERS",
		5: "PRODUCERS",
	}
	SetNodeConfigRequest_ConfigType_value = map[string]int32{
		"TX_POOL_LIMIT":  0,
		"BLK_SIZE_LIMIT": 1,
		"MAX_CONN_OUT":   2,
		"MAX_CONN_IN":    3,
		"MAX_PRODUCERS":  4,
		"PRODUCERS":      5,
	}
)

func (x SetNodeConfigRequest_ConfigType) Enum() *SetNodeConfigRequest_ConfigType {
	p := new(SetNodeConfigRequest_ConfigType)
	*p = x
	return p
}

func (x SetNodeConfigRequest_ConfigType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetNodeConfigRequest_ConfigType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_enumTypes[0].Descriptor()
}

func (SetNodeConfigRequest_ConfigType) Type() protoreflect.EnumType {
	return &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_enumTypes[0]
}

func (x SetNodeConfigRequest_ConfigType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetNodeConfigRequest_ConfigType.Descriptor instead.
func (SetNodeConfigRequest_ConfigType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{47, 0}
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAccountRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type UnlockAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockAccountRequest) Reset() {
	*x = UnlockAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockAccountRequest) ProtoMessage() {}

func (x *UnlockAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockAccountRequest.ProtoReflect.Descriptor instead.
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{1}
}

type AddProducerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddProducerRequest) Reset() {
	*x = AddProducerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProducerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProducerRequest) ProtoMessage() {}

func (x *AddProducerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProducerRequest.ProtoReflect.Descriptor instead.
func (*AddProducerRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *AddProducerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *GetBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SendFromMinerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To     string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount []byte `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SendFromMinerRequest) Reset() {
	*x = SendFromMinerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFromMinerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFromMinerRequest) ProtoMessage() {}

func (x *SendFromMinerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFromMinerRequest.ProtoReflect.Descriptor instead.
func (*SendFromMinerRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *SendFromMinerRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendFromMinerRequest) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To          string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount      []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	AccountPath string `protobuf:"bytes,4,opt,name=account_path,json=accountPath,proto3" json:"account_path,omitempty"`
	Tip         []byte `protobuf:"bytes,5,opt,name=tip,proto3" json:"tip,omitempty"`
	Data        string `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	GasLimit    []byte `protobuf:"bytes,7,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasPrice    []byte `protobuf:"bytes,8,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *SendRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendRequest) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *SendRequest) GetAccountPath() string {
	if x != nil {
		return x.AccountPath
	}
	return ""
}

func (x *SendRequest) GetTip() []byte {
	if x != nil {
		return x.Tip
	}
	return nil
}

func (x *SendRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SendRequest) GetGasLimit() []byte {
	if x != nil {
		return x.GasLimit
	}
	return nil
}

func (x *SendRequest) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

type GetPeerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPeerInfoRequest) Reset() {
	*x = GetPeerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoRequest) ProtoMessage() {}

func (x *GetPeerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{6}
}

type GetBlockchainInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBlockchainInfoRequest) Reset() {
	*x = GetBlockchainInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainInfoRequest) ProtoMessage() {}

func (x *GetBlockchainInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainInfoRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{7}
}

type AddPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullAddress string `protobuf:"bytes,1,opt,name=full_address,json=fullAddress,proto3" json:"full_address,omitempty"`
}

func (x *AddPeerRequest) Reset() {
	*x = AddPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerRequest) ProtoMessage() {}

func (x *AddPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerRequest.ProtoReflect.Descriptor instead.
func (*AddPeerRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *AddPeerRequest) GetFullAddress() string {
	if x != nil {
		return x.FullAddress
	}
	return ""
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoVersion string `protobuf:"bytes,1,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetVersionRequest) GetProtoVersion() string {
	if x != nil {
		return x.ProtoVersion
	}
	return ""
}

type GetUTXORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` //account address
}

func (x *GetUTXORequest) Reset() {
	*x = GetUTXORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUTXORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUTXORequest) ProtoMessage() {}

func (x *GetUTXORequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUTXORequest.ProtoReflect.Descriptor instead.
func (*GetUTXORequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *GetUTXORequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartBlockHashes [][]byte `protobuf:"bytes,1,rep,name=start_block_hashes,json=startBlockHashes,proto3" json:"start_block_hashes,omitempty"` // Query start block hashes, sorted descending by height.
	MaxCount         int32    `protobuf:"varint,2,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`                          // Max query block count
}

func (x *GetBlocksRequest) Reset() {
	*x = GetBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksRequest) ProtoMessage() {}

func (x *GetBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *GetBlocksRequest) GetStartBlockHashes() [][]byte {
	if x != nil {
		return x.StartBlockHashes
	}
	return nil
}

func (x *GetBlocksRequest) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

type GetBlockByHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetBlockByHashRequest) Reset() {
	*x = GetBlockByHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHashRequest) ProtoMessage() {}

func (x *GetBlockByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHashRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlockByHashRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetBlockByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetBlockByHeightRequest) Reset() {
	*x = GetBlockByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightRequest) ProtoMessage() {}

func (x *GetBlockByHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlockByHeightRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SendTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *SendTransactionRequest) Reset() {
	*x = SendTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionRequest) ProtoMessage() {}

func (x *SendTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *SendTransactionRequest) GetTransaction() *pb.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type SendBatchTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*pb.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *SendBatchTransactionRequest) Reset() {
	*x = SendBatchTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBatchTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBatchTransactionRequest) ProtoMessage() {}

func (x *SendBatchTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBatchTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendBatchTransactionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *SendBatchTransactionRequest) GetTransactions() []*pb.Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetNewTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNewTransactionRequest) Reset() {
	*x = GetNewTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewTransactionRequest) ProtoMessage() {}

func (x *GetNewTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetNewTransactionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{16}
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *SubscribeRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type MetricsServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetricsServiceRequest) Reset() {
	*x = MetricsServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsServiceRequest) ProtoMessage() {}

func (x *MetricsServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsServiceRequest.ProtoReflect.Descriptor instead.
func (*MetricsServiceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{18}
}

type GetLastIrreversibleBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLastIrreversibleBlockRequest) Reset() {
	*x = GetLastIrreversibleBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastIrreversibleBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastIrreversibleBlockRequest) ProtoMessage() {}

func (x *GetLastIrreversibleBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastIrreversibleBlockRequest.ProtoReflect.Descriptor instead.
func (*GetLastIrreversibleBlockRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{19}
}

type EstimateGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *EstimateGasRequest) Reset() {
	*x = EstimateGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasRequest) ProtoMessage() {}

func (x *EstimateGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasRequest.ProtoReflect.Descriptor instead.
func (*EstimateGasRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *EstimateGasRequest) GetTransaction() *pb.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GasPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GasPriceRequest) Reset() {
	*x = GasPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPriceRequest) ProtoMessage() {}

func (x *GasPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPriceRequest.ProtoReflect.Descriptor instead.
func (*GasPriceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{21}
}

type ContractQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddr string `protobuf:"bytes,1,opt,name=contract_addr,json=contractAddr,proto3" json:"contract_addr,omitempty"`
	Key          string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value        string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContractQueryRequest) Reset() {
	*x = ContractQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractQueryRequest) ProtoMessage() {}

func (x *ContractQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractQueryRequest.ProtoReflect.Descriptor instead.
func (*ContractQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *ContractQueryRequest) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

func (x *ContractQueryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ContractQueryRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AddProducerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddProducerResponse) Reset() {
	*x = AddProducerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProducerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProducerResponse) ProtoMessage() {}

func (x *AddProducerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProducerResponse.ProtoReflect.Descriptor instead.
func (*AddProducerResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{23}
}

type UnlockAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockAccountResponse) Reset() {
	*x = UnlockAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockAccountResponse) ProtoMessage() {}

func (x *UnlockAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockAccountResponse.ProtoReflect.Descriptor instead.
func (*UnlockAccountResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{24}
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *GetBalanceResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SendFromMinerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendFromMinerResponse) Reset() {
	*x = SendFromMinerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFromMinerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFromMinerResponse) ProtoMessage() {}

func (x *SendFromMinerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFromMinerResponse.ProtoReflect.Descriptor instead.
func (*SendFromMinerResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{26}
}

type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Txid            string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *SendResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *SendResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetPeerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerList []*pb1.PeerInfo `protobuf:"bytes,1,rep,name=peer_list,json=peerList,proto3" json:"peer_list,omitempty"`
}

func (x *GetPeerInfoResponse) Reset() {
	*x = GetPeerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoResponse) ProtoMessage() {}

func (x *GetPeerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPeerInfoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *GetPeerInfoResponse) GetPeerList() []*pb1.PeerInfo {
	if x != nil {
		return x.PeerList
	}
	return nil
}

type GetBlockchainInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TailBlockHash []byte   `protobuf:"bytes,1,opt,name=tail_block_hash,json=tailBlockHash,proto3" json:"tail_block_hash,omitempty"`
	BlockHeight   uint64   `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Producers     []string `protobuf:"bytes,3,rep,name=producers,proto3" json:"producers,omitempty"` // all producers' addresses
	Timestamp     int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetBlockchainInfoResponse) Reset() {
	*x = GetBlockchainInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainInfoResponse) ProtoMessage() {}

func (x *GetBlockchainInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainInfoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *GetBlockchainInfoResponse) GetTailBlockHash() []byte {
	if x != nil {
		return x.TailBlockHash
	}
	return nil
}

func (x *GetBlockchainInfoResponse) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GetBlockchainInfoResponse) GetProducers() []string {
	if x != nil {
		return x.Producers
	}
	return nil
}

func (x *GetBlockchainInfoResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AddPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPeerResponse) Reset() {
	*x = AddPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerResponse) ProtoMessage() {}

func (x *AddPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerResponse.ProtoReflect.Descriptor instead.
func (*AddPeerResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{30}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoVersion  string `protobuf:"bytes,1,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
	ServerVersion string `protobuf:"bytes,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *GetVersionResponse) GetProtoVersion() string {
	if x != nil {
		return x.ProtoVersion
	}
	return ""
}

func (x *GetVersionResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

type GetUTXOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utxos        []*pb2.Utxo        `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	BlockHeaders []*pb3.BlockHeader `protobuf:"bytes,2,rep,name=block_headers,json=blockHeaders,proto3" json:"block_headers,omitempty"` //The latest block headers
}

func (x *GetUTXOResponse) Reset() {
	*x = GetUTXOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUTXOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUTXOResponse) ProtoMessage() {}

func (x *GetUTXOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUTXOResponse.ProtoReflect.Descriptor instead.
func (*GetUTXOResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetUTXOResponse) GetUtxos() []*pb2.Utxo {
	if x != nil {
		return x.Utxos
	}
	return nil
}

func (x *GetUTXOResponse) GetBlockHeaders() []*pb3.BlockHeader {
	if x != nil {
		return x.BlockHeaders
	}
	return nil
}

type GetBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*pb3.Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *GetBlocksResponse) Reset() {
	*x = GetBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksResponse) ProtoMessage() {}

func (x *GetBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *GetBlocksResponse) GetBlocks() []*pb3.Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type GetBlockByHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *pb3.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetBlockByHashResponse) Reset() {
	*x = GetBlockByHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHashResponse) ProtoMessage() {}

func (x *GetBlockByHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHashResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByHashResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *GetBlockByHashResponse) GetBlock() *pb3.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetBlockByHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *pb3.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetBlockByHeightResponse) Reset() {
	*x = GetBlockByHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightResponse) ProtoMessage() {}

func (x *GetBlockByHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *GetBlockByHeightResponse) GetBlock() *pb3.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type SendTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratedContractAddress string `protobuf:"bytes,1,opt,name=generated_contract_address,json=generatedContractAddress,proto3" json:"generated_contract_address,omitempty"`
}

func (x *SendTransactionResponse) Reset() {
	*x = SendTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionResponse) ProtoMessage() {}

func (x *SendTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *SendTransactionResponse) GetGeneratedContractAddress() string {
	if x != nil {
		return x.GeneratedContractAddress
	}
	return ""
}

type SendBatchTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendBatchTransactionResponse) Reset() {
	*x = SendBatchTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBatchTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBatchTransactionResponse) ProtoMessage() {}

func (x *SendBatchTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBatchTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendBatchTransactionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{37}
}

type SendTransactionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid    []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`  // Transactions that are sent
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"` // grpc status code
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendTransactionStatus) Reset() {
	*x = SendTransactionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionStatus) ProtoMessage() {}

func (x *SendTransactionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionStatus.ProtoReflect.Descriptor instead.
func (*SendTransactionStatus) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *SendTransactionStatus) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

func (x *SendTransactionStatus) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendTransactionStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetNewTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *GetNewTransactionResponse) Reset() {
	*x = GetNewTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewTransactionResponse) ProtoMessage() {}

func (x *GetNewTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetNewTransactionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *GetNewTransactionResponse) GetTransaction() *pb.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{40}
}

func (x *SubscribeResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetAllTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTransactionsRequest) Reset() {
	*x = GetAllTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionsRequest) ProtoMessage() {}

func (x *GetAllTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetAllTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{41}
}

type GetAllTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*pb.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetAllTransactionsResponse) Reset() {
	*x = GetAllTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionsResponse) ProtoMessage() {}

func (x *GetAllTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetAllTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *GetAllTransactionsResponse) GetTransactions() []*pb.Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetLastIrreversibleBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *pb3.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetLastIrreversibleBlockResponse) Reset() {
	*x = GetLastIrreversibleBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastIrreversibleBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastIrreversibleBlockResponse) ProtoMessage() {}

func (x *GetLastIrreversibleBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastIrreversibleBlockResponse.ProtoReflect.Descriptor instead.
func (*GetLastIrreversibleBlockResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *GetLastIrreversibleBlockResponse) GetBlock() *pb3.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetMetricsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMetricsInfoResponse) Reset() {
	*x = GetMetricsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsInfoResponse) ProtoMessage() {}

func (x *GetMetricsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsInfoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{44}
}

func (x *GetMetricsInfoResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *pb4.Metrics `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{45}
}

func (x *GetStatsResponse) GetStats() *pb4.Metrics {
	if x != nil {
		return x.Stats
	}
	return nil
}

type GetNodeConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxPoolLimit      uint32   `protobuf:"varint,1,opt,name=tx_pool_limit,json=txPoolLimit,proto3" json:"tx_pool_limit,omitempty"`
	BlkSizeLimit     uint32   `protobuf:"varint,2,opt,name=blk_size_limit,json=blkSizeLimit,proto3" json:"blk_size_limit,omitempty"`
	MaxConnectionOut uint32   `protobuf:"varint,3,opt,name=max_connection_out,json=maxConnectionOut,proto3" json:"max_connection_out,omitempty"`
	MaxConnectionIn  uint32   `protobuf:"varint,4,opt,name=max_connection_in,json=maxConnectionIn,proto3" json:"max_connection_in,omitempty"`
	ProducerAddress  string   `protobuf:"bytes,5,opt,name=producer_address,json=producerAddress,proto3" json:"producer_address,omitempty"`
	Producers        []string `protobuf:"bytes,6,rep,name=producers,proto3" json:"producers,omitempty"`
	MaxProducers     uint32   `protobuf:"varint,7,opt,name=max_producers,json=maxProducers,proto3" json:"max_producers,omitempty"`
	IpfsAddresses    []string `protobuf:"bytes,9,rep,name=ipfs_addresses,json=ipfsAddresses,proto3" json:"ipfs_addresses,omitempty"`
	RpcPort          uint32   `protobuf:"varint,10,opt,name=rpc_port,json=rpcPort,proto3" json:"rpc_port,omitempty"`
}

func (x *GetNodeConfigResponse) Reset() {
	*x = GetNodeConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeConfigResponse) ProtoMessage() {}

func (x *GetNodeConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeConfigResponse.ProtoReflect.Descriptor instead.
func (*GetNodeConfigResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{46}
}

func (x *GetNodeConfigResponse) GetTxPoolLimit() uint32 {
	if x != nil {
		return x.TxPoolLimit
	}
	return 0
}

func (x *GetNodeConfigResponse) GetBlkSizeLimit() uint32 {
	if x != nil {
		return x.BlkSizeLimit
	}
	return 0
}

func (x *GetNodeConfigResponse) GetMaxConnectionOut() uint32 {
	if x != nil {
		return x.MaxConnectionOut
	}
	return 0
}

func (x *GetNodeConfigResponse) GetMaxConnectionIn() uint32 {
	if x != nil {
		return x.MaxConnectionIn
	}
	return 0
}

func (x *GetNodeConfigResponse) GetProducerAddress() string {
	if x != nil {
		return x.ProducerAddress
	}
	return ""
}

func (x *GetNodeConfigResponse) GetProducers() []string {
	if x != nil {
		return x.Producers
	}
	return nil
}

func (x *GetNodeConfigResponse) GetMaxProducers() uint32 {
	if x != nil {
		return x.MaxProducers
	}
	return 0
}

func (x *GetNodeConfigResponse) GetIpfsAddresses() []string {
	if x != nil {
		return x.IpfsAddresses
	}
	return nil
}

func (x *GetNodeConfigResponse) GetRpcPort() uint32 {
	if x != nil {
		return x.RpcPort
	}
	return 0
}

type SetNodeConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedConfigs   []SetNodeConfigRequest_ConfigType `protobuf:"varint,1,rep,packed,name=updated_configs,json=updatedConfigs,proto3,enum=rpcpb.SetNodeConfigRequest_ConfigType" json:"updated_configs,omitempty"`
	TxPoolLimit      uint32                            `protobuf:"varint,2,opt,name=tx_pool_limit,json=txPoolLimit,proto3" json:"tx_pool_limit,omitempty"`
	BlkSizeLimit     uint32                            `protobuf:"varint,3,opt,name=blk_size_limit,json=blkSizeLimit,proto3" json:"blk_size_limit,omitempty"`
	MaxConnectionOut uint32                            `protobuf:"varint,4,opt,name=max_connection_out,json=maxConnectionOut,proto3" json:"max_connection_out,omitempty"`
	MaxConnectionIn  uint32                            `protobuf:"varint,5,opt,name=max_connection_in,json=maxConnectionIn,proto3" json:"max_connection_in,omitempty"`
	MaxProducers     uint32                            `protobuf:"varint,6,opt,name=max_producers,json=maxProducers,proto3" json:"max_producers,omitempty"`
	Producers        []string                          `protobuf:"bytes,7,rep,name=producers,proto3" json:"producers,omitempty"`
}

func (x *SetNodeConfigRequest) Reset() {
	*x = SetNodeConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNodeConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodeConfigRequest) ProtoMessage() {}

func (x *SetNodeConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodeConfigRequest.ProtoReflect.Descriptor instead.
func (*SetNodeConfigRequest) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{47}
}

func (x *SetNodeConfigRequest) GetUpdatedConfigs() []SetNodeConfigRequest_ConfigType {
	if x != nil {
		return x.UpdatedConfigs
	}
	return nil
}

func (x *SetNodeConfigRequest) GetTxPoolLimit() uint32 {
	if x != nil {
		return x.TxPoolLimit
	}
	return 0
}

func (x *SetNodeConfigRequest) GetBlkSizeLimit() uint32 {
	if x != nil {
		return x.BlkSizeLimit
	}
	return 0
}

func (x *SetNodeConfigRequest) GetMaxConnectionOut() uint32 {
	if x != nil {
		return x.MaxConnectionOut
	}
	return 0
}

func (x *SetNodeConfigRequest) GetMaxConnectionIn() uint32 {
	if x != nil {
		return x.MaxConnectionIn
	}
	return 0
}

func (x *SetNodeConfigRequest) GetMaxProducers() uint32 {
	if x != nil {
		return x.MaxProducers
	}
	return 0
}

func (x *SetNodeConfigRequest) GetProducers() []string {
	if x != nil {
		return x.Producers
	}
	return nil
}

type EstimateGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasCount []byte `protobuf:"bytes,1,opt,name=gas_count,json=gasCount,proto3" json:"gas_count,omitempty"`
}

func (x *EstimateGasResponse) Reset() {
	*x = EstimateGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasResponse) ProtoMessage() {}

func (x *EstimateGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasResponse.ProtoReflect.Descriptor instead.
func (*EstimateGasResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{48}
}

func (x *EstimateGasResponse) GetGasCount() []byte {
	if x != nil {
		return x.GasCount
	}
	return nil
}

type GasPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasPrice []byte `protobuf:"bytes,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
}

func (x *GasPriceResponse) Reset() {
	*x = GasPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPriceResponse) ProtoMessage() {}

func (x *GasPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPriceResponse.ProtoReflect.Descriptor instead.
func (*GasPriceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *GasPriceResponse) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

type ContractQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContractQueryResponse) Reset() {
	*x = ContractQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractQueryResponse) ProtoMessage() {}

func (x *ContractQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractQueryResponse.ProtoReflect.Descriptor instead.
func (*ContractQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP(), []int{50}
}

func (x *ContractQueryResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ContractQueryResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto protoreflect.FileDescriptor

var file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x68,
	0x75, 0x69, 0x7a, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x79, 0x2d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x79, 0x61, 0x68, 0x75, 0x69, 0x7a, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x61, 0x70, 0x70,
	0x6c, 0x65, 0x79, 0x2d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x70, 0x62,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x51, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x68, 0x75, 0x69, 0x7a, 0x68,
	0x61, 0x6e, 0x2f, 0x64, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x79, 0x2d, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x68, 0x75,
	0x69, 0x7a, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x79, 0x2d, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x75, 0x74, 0x78, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x75, 0x74, 0x78, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x79, 0x61, 0x68, 0x75, 0x69, 0x7a, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x61, 0x70, 0x70, 0x6c,
	0x65, 0x79, 0x2d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x65, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x68, 0x75, 0x69, 0x7a, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x79, 0x2d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x6f,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x62, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x36, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x2e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3e,
	0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcc,
	0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x33, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2a,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5d, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x56, 0x0a, 0x16, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5d, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x10,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x72, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x12, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x61, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xa2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x54, 0x58, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05,
	0x75, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x70, 0x62, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x05, 0x75, 0x74, 0x78, 0x6f, 0x73,
	0x12, 0x39, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70,
	0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x3e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x57, 0x0a, 0x17, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x59,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x11, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x22, 0xeb, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x74, 0x78, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6c, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x6c, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x70, 0x66, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x70, 0x66, 0x73, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72,
	0x74, 0x22, 0xc8, 0x03, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74,
	0x78, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x74, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x6c, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x6c, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x73, 0x22, 0x78, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x58, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x4b, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x58, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x58,
	0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41,
	0x58, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x52, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x52, 0x53, 0x10, 0x05, 0x22, 0x32, 0x0a, 0x13,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x2f, 0x0a, 0x10, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x3f, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x32, 0xc8, 0x0a, 0x0a, 0x0a, 0x52, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x46, 0x0a, 0x0d, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x52, 0x70, 0x63,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x14, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x70, 0x63,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x0a, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x12, 0x15, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x54, 0x58, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0c, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x13, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x12, 0x52, 0x70, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x17, 0x52, 0x70, 0x63, 0x53, 0x65,
	0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x14, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0c,
	0x52, 0x70, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x68, 0x0a, 0x1f, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d,
	0x54, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x1b, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x72, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x72, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x49, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x73, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x70,
	0x63, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x70,
	0x62, 0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xbb, 0x03,
	0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d,
	0x0a, 0x0a, 0x52, 0x70, 0x63, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x07, 0x52, 0x70, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x10, 0x52, 0x70, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x52, 0x70,
	0x63, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x70,
	0x63, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xce, 0x02, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a,
	0x11, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0b, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x52, 0x70, 0x63,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x70,
	0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x52,
	0x70, 0x63, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1b, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x68, 0x75, 0x69,
	0x7a, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x79, 0x2d, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x62, 0xa2, 0x02, 0x03, 0x48, 0x4c, 0x57, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescOnce sync.Once
	file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescData = file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDesc
)

func file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescGZIP() []byte {
	file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescOnce.Do(func() {
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescData)
	})
	return file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDescData
}

var file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_goTypes = []interface{}{
	(SetNodeConfigRequest_ConfigType)(0),     // 0: rpcpb.SetNodeConfigRequest.ConfigType
	(*CreateAccountRequest)(nil),             // 1: rpcpb.CreateAccountRequest
	(*UnlockAccountRequest)(nil),             // 2: rpcpb.UnlockAccountRequest
	(*AddProducerRequest)(nil),               // 3: rpcpb.AddProducerRequest
	(*GetBalanceRequest)(nil),                // 4: rpcpb.GetBalanceRequest
	(*SendFromMinerRequest)(nil),             // 5: rpcpb.SendFromMinerRequest
	(*SendRequest)(nil),                      // 6: rpcpb.SendRequest
	(*GetPeerInfoRequest)(nil),               // 7: rpcpb.GetPeerInfoRequest
	(*GetBlockchainInfoRequest)(nil),         // 8: rpcpb.GetBlockchainInfoRequest
	(*AddPeerRequest)(nil),                   // 9: rpcpb.AddPeerRequest
	(*GetVersionRequest)(nil),                // 10: rpcpb.GetVersionRequest
	(*GetUTXORequest)(nil),                   // 11: rpcpb.GetUTXORequest
	(*GetBlocksRequest)(nil),                 // 12: rpcpb.GetBlocksRequest
	(*GetBlockByHashRequest)(nil),            // 13: rpcpb.GetBlockByHashRequest
	(*GetBlockByHeightRequest)(nil),          // 14: rpcpb.GetBlockByHeightRequest
	(*SendTransactionRequest)(nil),           // 15: rpcpb.SendTransactionRequest
	(*SendBatchTransactionRequest)(nil),      // 16: rpcpb.SendBatchTransactionRequest
	(*GetNewTransactionRequest)(nil),         // 17: rpcpb.GetNewTransactionRequest
	(*SubscribeRequest)(nil),                 // 18: rpcpb.SubscribeRequest
	(*MetricsServiceRequest)(nil),            // 19: rpcpb.MetricsServiceRequest
	(*GetLastIrreversibleBlockRequest)(nil),  // 20: rpcpb.GetLastIrreversibleBlockRequest
	(*EstimateGasRequest)(nil),               // 21: rpcpb.EstimateGasRequest
	(*GasPriceRequest)(nil),                  // 22: rpcpb.GasPriceRequest
	(*ContractQueryRequest)(nil),             // 23: rpcpb.ContractQueryRequest
	(*AddProducerResponse)(nil),              // 24: rpcpb.AddProducerResponse
	(*UnlockAccountResponse)(nil),            // 25: rpcpb.UnlockAccountResponse
	(*GetBalanceResponse)(nil),               // 26: rpcpb.GetBalanceResponse
	(*SendFromMinerResponse)(nil),            // 27: rpcpb.SendFromMinerResponse
	(*SendResponse)(nil),                     // 28: rpcpb.SendResponse
	(*GetPeerInfoResponse)(nil),              // 29: rpcpb.GetPeerInfoResponse
	(*GetBlockchainInfoResponse)(nil),        // 30: rpcpb.GetBlockchainInfoResponse
	(*AddPeerResponse)(nil),                  // 31: rpcpb.AddPeerResponse
	(*GetVersionResponse)(nil),               // 32: rpcpb.GetVersionResponse
	(*GetUTXOResponse)(nil),                  // 33: rpcpb.GetUTXOResponse
	(*GetBlocksResponse)(nil),                // 34: rpcpb.GetBlocksResponse
	(*GetBlockByHashResponse)(nil),           // 35: rpcpb.GetBlockByHashResponse
	(*GetBlockByHeightResponse)(nil),         // 36: rpcpb.GetBlockByHeightResponse
	(*SendTransactionResponse)(nil),          // 37: rpcpb.SendTransactionResponse
	(*SendBatchTransactionResponse)(nil),     // 38: rpcpb.SendBatchTransactionResponse
	(*SendTransactionStatus)(nil),            // 39: rpcpb.SendTransactionStatus
	(*GetNewTransactionResponse)(nil),        // 40: rpcpb.GetNewTransactionResponse
	(*SubscribeResponse)(nil),                // 41: rpcpb.SubscribeResponse
	(*GetAllTransactionsRequest)(nil),        // 42: rpcpb.GetAllTransactionsRequest
	(*GetAllTransactionsResponse)(nil),       // 43: rpcpb.GetAllTransactionsResponse
	(*GetLastIrreversibleBlockResponse)(nil), // 44: rpcpb.GetLastIrreversibleBlockResponse
	(*GetMetricsInfoResponse)(nil),           // 45: rpcpb.GetMetricsInfoResponse
	(*GetStatsResponse)(nil),                 // 46: rpcpb.GetStatsResponse
	(*GetNodeConfigResponse)(nil),            // 47: rpcpb.GetNodeConfigResponse
	(*SetNodeConfigRequest)(nil),             // 48: rpcpb.SetNodeConfigRequest
	(*EstimateGasResponse)(nil),              // 49: rpcpb.EstimateGasResponse
	(*GasPriceResponse)(nil),                 // 50: rpcpb.GasPriceResponse
	(*ContractQueryResponse)(nil),            // 51: rpcpb.ContractQueryResponse
	(*pb.Transaction)(nil),                   // 52: transactionpb.Transaction
	(*pb1.PeerInfo)(nil),                     // 53: networkpb.PeerInfo
	(*pb2.Utxo)(nil),                         // 54: utxopb.Utxo
	(*pb3.BlockHeader)(nil),                  // 55: blockpb.BlockHeader
	(*pb3.Block)(nil),                        // 56: blockpb.Block
	(*pb4.Metrics)(nil),                      // 57: metricspb.Metrics
}
var file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_depIdxs = []int32{
	52, // 0: rpcpb.SendTransactionRequest.transaction:type_name -> transactionpb.Transaction
	52, // 1: rpcpb.SendBatchTransactionRequest.transactions:type_name -> transactionpb.Transaction
	52, // 2: rpcpb.EstimateGasRequest.transaction:type_name -> transactionpb.Transaction
	53, // 3: rpcpb.GetPeerInfoResponse.peer_list:type_name -> networkpb.PeerInfo
	54, // 4: rpcpb.GetUTXOResponse.utxos:type_name -> utxopb.Utxo
	55, // 5: rpcpb.GetUTXOResponse.block_headers:type_name -> blockpb.BlockHeader
	56, // 6: rpcpb.GetBlocksResponse.blocks:type_name -> blockpb.Block
	56, // 7: rpcpb.GetBlockByHashResponse.block:type_name -> blockpb.Block
	56, // 8: rpcpb.GetBlockByHeightResponse.block:type_name -> blockpb.Block
	52, // 9: rpcpb.GetNewTransactionResponse.transaction:type_name -> transactionpb.Transaction
	52, // 10: rpcpb.GetAllTransactionsResponse.transactions:type_name -> transactionpb.Transaction
	56, // 11: rpcpb.GetLastIrreversibleBlockResponse.block:type_name -> blockpb.Block
	57, // 12: rpcpb.GetStatsResponse.stats:type_name -> metricspb.Metrics
	0,  // 13: rpcpb.SetNodeConfigRequest.updated_configs:type_name -> rpcpb.SetNodeConfigRequest.ConfigType
	10, // 14: rpcpb.RpcService.RpcGetVersion:input_type -> rpcpb.GetVersionRequest
	4,  // 15: rpcpb.RpcService.RpcGetBalance:input_type -> rpcpb.GetBalanceRequest
	8,  // 16: rpcpb.RpcService.RpcGetBlockchainInfo:input_type -> rpcpb.GetBlockchainInfoRequest
	11, // 17: rpcpb.RpcService.RpcGetUTXO:input_type -> rpcpb.GetUTXORequest
	12, // 18: rpcpb.RpcService.RpcGetBlocks:input_type -> rpcpb.GetBlocksRequest
	13, // 19: rpcpb.RpcService.RpcGetBlockByHash:input_type -> rpcpb.GetBlockByHashRequest
	14, // 20: rpcpb.RpcService.RpcGetBlockByHeight:input_type -> rpcpb.GetBlockByHeightRequest
	15, // 21: rpcpb.RpcService.RpcSendTransaction:input_type -> rpcpb.SendTransactionRequest
	16, // 22: rpcpb.RpcService.RpcSendBatchTransaction:input_type -> rpcpb.SendBatchTransactionRequest
	17, // 23: rpcpb.RpcService.RpcGetNewTransaction:input_type -> rpcpb.GetNewTransactionRequest
	18, // 24: rpcpb.RpcService.RpcSubscribe:input_type -> rpcpb.SubscribeRequest
	42, // 25: rpcpb.RpcService.RpcGetAllTransactionsFromTxPool:input_type -> rpcpb.GetAllTransactionsRequest
	20, // 26: rpcpb.RpcService.RpcGetLastIrreversibleBlock:input_type -> rpcpb.GetLastIrreversibleBlockRequest
	21, // 27: rpcpb.RpcService.RpcEstimateGas:input_type -> rpcpb.EstimateGasRequest
	22, // 28: rpcpb.RpcService.RpcGasPrice:input_type -> rpcpb.GasPriceRequest
	23, // 29: rpcpb.RpcService.RpcContractQuery:input_type -> rpcpb.ContractQueryRequest
	9,  // 30: rpcpb.AdminService.RpcAddPeer:input_type -> rpcpb.AddPeerRequest
	6,  // 31: rpcpb.AdminService.RpcSend:input_type -> rpcpb.SendRequest
	7,  // 32: rpcpb.AdminService.RpcGetPeerInfo:input_type -> rpcpb.GetPeerInfoRequest
	5,  // 33: rpcpb.AdminService.RpcSendFromMiner:input_type -> rpcpb.SendFromMinerRequest
	3,  // 34: rpcpb.AdminService.RpcAddProducer:input_type -> rpcpb.AddProducerRequest
	2,  // 35: rpcpb.AdminService.RpcUnlockAccount:input_type -> rpcpb.UnlockAccountRequest
	19, // 36: rpcpb.MetricService.RpcGetMetricsInfo:input_type -> rpcpb.MetricsServiceRequest
	19, // 37: rpcpb.MetricService.RpcGetStats:input_type -> rpcpb.MetricsServiceRequest
	19, // 38: rpcpb.MetricService.RpcGetNodeConfig:input_type -> rpcpb.MetricsServiceRequest
	48, // 39: rpcpb.MetricService.RpcSetNodeConfig:input_type -> rpcpb.SetNodeConfigRequest
	32, // 40: rpcpb.RpcService.RpcGetVersion:output_type -> rpcpb.GetVersionResponse
	26, // 41: rpcpb.RpcService.RpcGetBalance:output_type -> rpcpb.GetBalanceResponse
	30, // 42: rpcpb.RpcService.RpcGetBlockchainInfo:output_type -> rpcpb.GetBlockchainInfoResponse
	33, // 43: rpcpb.RpcService.RpcGetUTXO:output_type -> rpcpb.GetUTXOResponse
	34, // 44: rpcpb.RpcService.RpcGetBlocks:output_type -> rpcpb.GetBlocksResponse
	35, // 45: rpcpb.RpcService.RpcGetBlockByHash:output_type -> rpcpb.GetBlockByHashResponse
	36, // 46: rpcpb.RpcService.RpcGetBlockByHeight:output_type -> rpcpb.GetBlockByHeightResponse
	37, // 47: rpcpb.RpcService.RpcSendTransaction:output_type -> rpcpb.SendTransactionResponse
	38, // 48: rpcpb.RpcService.RpcSendBatchTransaction:output_type -> rpcpb.SendBatchTransactionResponse
	40, // 49: rpcpb.RpcService.RpcGetNewTransaction:output_type -> rpcpb.GetNewTransactionResponse
	41, // 50: rpcpb.RpcService.RpcSubscribe:output_type -> rpcpb.SubscribeResponse
	43, // 51: rpcpb.RpcService.RpcGetAllTransactionsFromTxPool:output_type -> rpcpb.GetAllTransactionsResponse
	44, // 52: rpcpb.RpcService.RpcGetLastIrreversibleBlock:output_type -> rpcpb.GetLastIrreversibleBlockResponse
	49, // 53: rpcpb.RpcService.RpcEstimateGas:output_type -> rpcpb.EstimateGasResponse
	50, // 54: rpcpb.RpcService.RpcGasPrice:output_type -> rpcpb.GasPriceResponse
	51, // 55: rpcpb.RpcService.RpcContractQuery:output_type -> rpcpb.ContractQueryResponse
	31, // 56: rpcpb.AdminService.RpcAddPeer:output_type -> rpcpb.AddPeerResponse
	28, // 57: rpcpb.AdminService.RpcSend:output_type -> rpcpb.SendResponse
	29, // 58: rpcpb.AdminService.RpcGetPeerInfo:output_type -> rpcpb.GetPeerInfoResponse
	27, // 59: rpcpb.AdminService.RpcSendFromMiner:output_type -> rpcpb.SendFromMinerResponse
	24, // 60: rpcpb.AdminService.RpcAddProducer:output_type -> rpcpb.AddProducerResponse
	25, // 61: rpcpb.AdminService.RpcUnlockAccount:output_type -> rpcpb.UnlockAccountResponse
	45, // 62: rpcpb.MetricService.RpcGetMetricsInfo:output_type -> rpcpb.GetMetricsInfoResponse
	46, // 63: rpcpb.MetricService.RpcGetStats:output_type -> rpcpb.GetStatsResponse
	47, // 64: rpcpb.MetricService.RpcGetNodeConfig:output_type -> rpcpb.GetNodeConfigResponse
	47, // 65: rpcpb.MetricService.RpcSetNodeConfig:output_type -> rpcpb.GetNodeConfigResponse
	40, // [40:66] is the sub-list for method output_type
	14, // [14:40] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_init() }
func file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_init() {
	if File_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProducerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFromMinerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUTXORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBatchTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastIrreversibleBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProducerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFromMinerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUTXOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBatchTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastIrreversibleBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNodeConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_goTypes,
		DependencyIndexes: file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_depIdxs,
		EnumInfos:         file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_enumTypes,
		MessageInfos:      file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_msgTypes,
	}.Build()
	File_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto = out.File
	file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_rawDesc = nil
	file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_goTypes = nil
	file_github_com_yahuizhan_dappley_metrics_go_api_rpc_pb_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RpcServiceClient is the client API for RpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcServiceClient interface {
	RpcGetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
	RpcGetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	RpcGetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error)
	RpcGetUTXO(ctx context.Context, in *GetUTXORequest, opts ...grpc.CallOption) (*GetUTXOResponse, error)
	RpcGetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error)
	RpcGetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockByHashResponse, error)
	RpcGetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockByHeightResponse, error)
	RpcSendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	RpcSendBatchTransaction(ctx context.Context, in *SendBatchTransactionRequest, opts ...grpc.CallOption) (*SendBatchTransactionResponse, error)
	RpcGetNewTransaction(ctx context.Context, in *GetNewTransactionRequest, opts ...grpc.CallOption) (RpcService_RpcGetNewTransactionClient, error)
	RpcSubscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (RpcService_RpcSubscribeClient, error)
	RpcGetAllTransactionsFromTxPool(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*GetAllTransactionsResponse, error)
	RpcGetLastIrreversibleBlock(ctx context.Context, in *GetLastIrreversibleBlockRequest, opts ...grpc.CallOption) (*GetLastIrreversibleBlockResponse, error)
	RpcEstimateGas(ctx context.Context, in *EstimateGasRequest, opts ...grpc.CallOption) (*EstimateGasResponse, error)
	RpcGasPrice(ctx context.Context, in *GasPriceRequest, opts ...grpc.CallOption) (*GasPriceResponse, error)
	RpcContractQuery(ctx context.Context, in *ContractQueryRequest, opts ...grpc.CallOption) (*ContractQueryResponse, error)
}

type rpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRpcServiceClient(cc grpc.ClientConnInterface) RpcServiceClient {
	return &rpcServiceClient{cc}
}

func (c *rpcServiceClient) RpcGetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error) {
	out := new(GetBlockchainInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockchainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetUTXO(ctx context.Context, in *GetUTXORequest, opts ...grpc.CallOption) (*GetUTXOResponse, error) {
	out := new(GetUTXOResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetUTXO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error) {
	out := new(GetBlocksResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockByHashResponse, error) {
	out := new(GetBlockByHashResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockByHeightResponse, error) {
	out := new(GetBlockByHeightResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcSendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcSendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcSendBatchTransaction(ctx context.Context, in *SendBatchTransactionRequest, opts ...grpc.CallOption) (*SendBatchTransactionResponse, error) {
	out := new(SendBatchTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcSendBatchTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetNewTransaction(ctx context.Context, in *GetNewTransactionRequest, opts ...grpc.CallOption) (RpcService_RpcGetNewTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcService_serviceDesc.Streams[0], "/rpcpb.RpcService/RpcGetNewTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcServiceRpcGetNewTransactionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RpcService_RpcGetNewTransactionClient interface {
	Recv() (*GetNewTransactionResponse, error)
	grpc.ClientStream
}

type rpcServiceRpcGetNewTransactionClient struct {
	grpc.ClientStream
}

func (x *rpcServiceRpcGetNewTransactionClient) Recv() (*GetNewTransactionResponse, error) {
	m := new(GetNewTransactionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rpcServiceClient) RpcSubscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (RpcService_RpcSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcService_serviceDesc.Streams[1], "/rpcpb.RpcService/RpcSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcServiceRpcSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RpcService_RpcSubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type rpcServiceRpcSubscribeClient struct {
	grpc.ClientStream
}

func (x *rpcServiceRpcSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rpcServiceClient) RpcGetAllTransactionsFromTxPool(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*GetAllTransactionsResponse, error) {
	out := new(GetAllTransactionsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetAllTransactionsFromTxPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetLastIrreversibleBlock(ctx context.Context, in *GetLastIrreversibleBlockRequest, opts ...grpc.CallOption) (*GetLastIrreversibleBlockResponse, error) {
	out := new(GetLastIrreversibleBlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetLastIrreversibleBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcEstimateGas(ctx context.Context, in *EstimateGasRequest, opts ...grpc.CallOption) (*EstimateGasResponse, error) {
	out := new(EstimateGasResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcEstimateGas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGasPrice(ctx context.Context, in *GasPriceRequest, opts ...grpc.CallOption) (*GasPriceResponse, error) {
	out := new(GasPriceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcContractQuery(ctx context.Context, in *ContractQueryRequest, opts ...grpc.CallOption) (*ContractQueryResponse, error) {
	out := new(ContractQueryResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcContractQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcServiceServer is the server API for RpcService service.
type RpcServiceServer interface {
	RpcGetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	RpcGetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	RpcGetBlockchainInfo(context.Context, *GetBlockchainInfoRequest) (*GetBlockchainInfoResponse, error)
	RpcGetUTXO(context.Context, *GetUTXORequest) (*GetUTXOResponse, error)
	RpcGetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error)
	RpcGetBlockByHash(context.Context, *GetBlockByHashRequest) (*GetBlockByHashResponse, error)
	RpcGetBlockByHeight(context.Context, *GetBlockByHeightRequest) (*GetBlockByHeightResponse, error)
	RpcSendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionResponse, error)
	RpcSendBatchTransaction(context.Context, *SendBatchTransactionRequest) (*SendBatchTransactionResponse, error)
	RpcGetNewTransaction(*GetNewTransactionRequest, RpcService_RpcGetNewTransactionServer) error
	RpcSubscribe(*SubscribeRequest, RpcService_RpcSubscribeServer) error
	RpcGetAllTransactionsFromTxPool(context.Context, *GetAllTransactionsRequest) (*GetAllTransactionsResponse, error)
	RpcGetLastIrreversibleBlock(context.Context, *GetLastIrreversibleBlockRequest) (*GetLastIrreversibleBlockResponse, error)
	RpcEstimateGas(context.Context, *EstimateGasRequest) (*EstimateGasResponse, error)
	RpcGasPrice(context.Context, *GasPriceRequest) (*GasPriceResponse, error)
	RpcContractQuery(context.Context, *ContractQueryRequest) (*ContractQueryResponse, error)
}

// UnimplementedRpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRpcServiceServer struct {
}

func (*UnimplementedRpcServiceServer) RpcGetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetVersion not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetBalance not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetBlockchainInfo(context.Context, *GetBlockchainInfoRequest) (*GetBlockchainInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetBlockchainInfo not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetUTXO(context.Context, *GetUTXORequest) (*GetUTXOResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetUTXO not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetBlocks not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetBlockByHash(context.Context, *GetBlockByHashRequest) (*GetBlockByHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetBlockByHash not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetBlockByHeight(context.Context, *GetBlockByHeightRequest) (*GetBlockByHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetBlockByHeight not implemented")
}
func (*UnimplementedRpcServiceServer) RpcSendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcSendTransaction not implemented")
}
func (*UnimplementedRpcServiceServer) RpcSendBatchTransaction(context.Context, *SendBatchTransactionRequest) (*SendBatchTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcSendBatchTransaction not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetNewTransaction(*GetNewTransactionRequest, RpcService_RpcGetNewTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method RpcGetNewTransaction not implemented")
}
func (*UnimplementedRpcServiceServer) RpcSubscribe(*SubscribeRequest, RpcService_RpcSubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method RpcSubscribe not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetAllTransactionsFromTxPool(context.Context, *GetAllTransactionsRequest) (*GetAllTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetAllTransactionsFromTxPool not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGetLastIrreversibleBlock(context.Context, *GetLastIrreversibleBlockRequest) (*GetLastIrreversibleBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetLastIrreversibleBlock not implemented")
}
func (*UnimplementedRpcServiceServer) RpcEstimateGas(context.Context, *EstimateGasRequest) (*EstimateGasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcEstimateGas not implemented")
}
func (*UnimplementedRpcServiceServer) RpcGasPrice(context.Context, *GasPriceRequest) (*GasPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGasPrice not implemented")
}
func (*UnimplementedRpcServiceServer) RpcContractQuery(context.Context, *ContractQueryRequest) (*ContractQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcContractQuery not implemented")
}

func RegisterRpcServiceServer(s *grpc.Server, srv RpcServiceServer) {
	s.RegisterService(&_RpcService_serviceDesc, srv)
}

func _RpcService_RpcGetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockchainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockchainInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockchainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockchainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockchainInfo(ctx, req.(*GetBlockchainInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetUTXO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUTXORequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetUTXO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetUTXO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetUTXO(ctx, req.(*GetUTXORequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlocks(ctx, req.(*GetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockByHash(ctx, req.(*GetBlockByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockByHeight(ctx, req.(*GetBlockByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcSendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcSendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcSendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcSendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcSendBatchTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendBatchTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcSendBatchTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcSendBatchTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcSendBatchTransaction(ctx, req.(*SendBatchTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetNewTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNewTransactionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RpcServiceServer).RpcGetNewTransaction(m, &rpcServiceRpcGetNewTransactionServer{stream})
}

type RpcService_RpcGetNewTransactionServer interface {
	Send(*GetNewTransactionResponse) error
	grpc.ServerStream
}

type rpcServiceRpcGetNewTransactionServer struct {
	grpc.ServerStream
}

func (x *rpcServiceRpcGetNewTransactionServer) Send(m *GetNewTransactionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RpcService_RpcSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RpcServiceServer).RpcSubscribe(m, &rpcServiceRpcSubscribeServer{stream})
}

type RpcService_RpcSubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type rpcServiceRpcSubscribeServer struct {
	grpc.ServerStream
}

func (x *rpcServiceRpcSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RpcService_RpcGetAllTransactionsFromTxPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetAllTransactionsFromTxPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetAllTransactionsFromTxPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetAllTransactionsFromTxPool(ctx, req.(*GetAllTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetLastIrreversibleBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastIrreversibleBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetLastIrreversibleBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetLastIrreversibleBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetLastIrreversibleBlock(ctx, req.(*GetLastIrreversibleBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcEstimateGas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstimateGasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcEstimateGas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcEstimateGas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcEstimateGas(ctx, req.(*EstimateGasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GasPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGasPrice(ctx, req.(*GasPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcContractQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContractQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcContractQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcContractQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcContractQuery(ctx, req.(*ContractQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.RpcService",
	HandlerType: (*RpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcGetVersion",
			Handler:    _RpcService_RpcGetVersion_Handler,
		},
		{
			MethodName: "RpcGetBalance",
			Handler:    _RpcService_RpcGetBalance_Handler,
		},
		{
			MethodName: "RpcGetBlockchainInfo",
			Handler:    _RpcService_RpcGetBlockchainInfo_Handler,
		},
		{
			MethodName: "RpcGetUTXO",
			Handler:    _RpcService_RpcGetUTXO_Handler,
		},
		{
			MethodName: "RpcGetBlocks",
			Handler:    _RpcService_RpcGetBlocks_Handler,
		},
		{
			MethodName: "RpcGetBlockByHash",
			Handler:    _RpcService_RpcGetBlockByHash_Handler,
		},
		{
			MethodName: "RpcGetBlockByHeight",
			Handler:    _RpcService_RpcGetBlockByHeight_Handler,
		},
		{
			MethodName: "RpcSendTransaction",
			Handler:    _RpcService_RpcSendTransaction_Handler,
		},
		{
			MethodName: "RpcSendBatchTransaction",
			Handler:    _RpcService_RpcSendBatchTransaction_Handler,
		},
		{
			MethodName: "RpcGetAllTransactionsFromTxPool",
			Handler:    _RpcService_RpcGetAllTransactionsFromTxPool_Handler,
		},
		{
			MethodName: "RpcGetLastIrreversibleBlock",
			Handler:    _RpcService_RpcGetLastIrreversibleBlock_Handler,
		},
		{
			MethodName: "RpcEstimateGas",
			Handler:    _RpcService_RpcEstimateGas_Handler,
		},
		{
			MethodName: "RpcGasPrice",
			Handler:    _RpcService_RpcGasPrice_Handler,
		},
		{
			MethodName: "RpcContractQuery",
			Handler:    _RpcService_RpcContractQuery_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RpcGetNewTransaction",
			Handler:       _RpcService_RpcGetNewTransaction_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RpcSubscribe",
			Handler:       _RpcService_RpcSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/yahuizhan/dappley-metrics-go-api/rpc/pb/rpc.proto",
}

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	RpcAddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error)
	RpcSend(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
	RpcGetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error)
	RpcSendFromMiner(ctx context.Context, in *SendFromMinerRequest, opts ...grpc.CallOption) (*SendFromMinerResponse, error)
	RpcAddProducer(ctx context.Context, in *AddProducerRequest, opts ...grpc.CallOption) (*AddProducerResponse, error)
	RpcUnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error)
}

type adminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminServiceClient(cc grpc.ClientConnInterface) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) RpcAddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error) {
	out := new(AddPeerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcAddPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcSend(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcGetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error) {
	out := new(GetPeerInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcGetPeerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcSendFromMiner(ctx context.Context, in *SendFromMinerRequest, opts ...grpc.CallOption) (*SendFromMinerResponse, error) {
	out := new(SendFromMinerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcSendFromMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcAddProducer(ctx context.Context, in *AddProducerRequest, opts ...grpc.CallOption) (*AddProducerResponse, error) {
	out := new(AddProducerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcAddProducer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcUnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error) {
	out := new(UnlockAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcUnlockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	RpcAddPeer(context.Context, *AddPeerRequest) (*AddPeerResponse, error)
	RpcSend(context.Context, *SendRequest) (*SendResponse, error)
	RpcGetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error)
	RpcSendFromMiner(context.Context, *SendFromMinerRequest) (*SendFromMinerResponse, error)
	RpcAddProducer(context.Context, *AddProducerRequest) (*AddProducerResponse, error)
	RpcUnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error)
}

// UnimplementedAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServiceServer struct {
}

func (*UnimplementedAdminServiceServer) RpcAddPeer(context.Context, *AddPeerRequest) (*AddPeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcAddPeer not implemented")
}
func (*UnimplementedAdminServiceServer) RpcSend(context.Context, *SendRequest) (*SendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcSend not implemented")
}
func (*UnimplementedAdminServiceServer) RpcGetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetPeerInfo not implemented")
}
func (*UnimplementedAdminServiceServer) RpcSendFromMiner(context.Context, *SendFromMinerRequest) (*SendFromMinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcSendFromMiner not implemented")
}
func (*UnimplementedAdminServiceServer) RpcAddProducer(context.Context, *AddProducerRequest) (*AddProducerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcAddProducer not implemented")
}
func (*UnimplementedAdminServiceServer) RpcUnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcUnlockAccount not implemented")
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_RpcAddPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcAddPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcAddPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcAddPeer(ctx, req.(*AddPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcSend(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcGetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcGetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcGetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcGetPeerInfo(ctx, req.(*GetPeerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcSendFromMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFromMinerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcSendFromMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcSendFromMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcSendFromMiner(ctx, req.(*SendFromMinerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcAddProducer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProducerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcAddProducer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcAddProducer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcAddProducer(ctx, req.(*AddProducerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcUnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcUnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcUnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcUnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcAddPeer",
			Handler:    _AdminService_RpcAddPeer_Handler,
		},
		{
			MethodName: "RpcSend",
			Handler:    _AdminService_RpcSend_Handler,
		},
		{
			MethodName: "RpcGetPeerInfo",
			Handler:    _AdminService_RpcGetPeerInfo_Handler,
		},
		{
			MethodName: "RpcSendFromMiner",
			Handler:    _AdminService_RpcSendFromMiner_Handler,
		},
		{
			MethodName: "RpcAddProducer",
			Handler:    _AdminService_RpcAddProducer_Handler,
		},
		{
			MethodName: "RpcUnlockAccount",
			Handler:    _AdminService_RpcUnlockAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/yahuizhan/dappley-metrics-go-api/rpc/pb/rpc.proto",
}

// MetricServiceClient is the client API for MetricService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricServiceClient interface {
	RpcGetMetricsInfo(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetMetricsInfoResponse, error)
	RpcGetStats(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetStatsResponse, error)
	RpcGetNodeConfig(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error)
	RpcSetNodeConfig(ctx context.Context, in *SetNodeConfigRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error)
}

type metricServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMetricServiceClient(cc grpc.ClientConnInterface) MetricServiceClient {
	return &metricServiceClient{cc}
}

func (c *metricServiceClient) RpcGetMetricsInfo(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetMetricsInfoResponse, error) {
	out := new(GetMetricsInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcGetMetricsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) RpcGetStats(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcGetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) RpcGetNodeConfig(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error) {
	out := new(GetNodeConfigResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcGetNodeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) RpcSetNodeConfig(ctx context.Context, in *SetNodeConfigRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error) {
	out := new(GetNodeConfigResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcSetNodeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricServiceServer is the server API for MetricService service.
type MetricServiceServer interface {
	RpcGetMetricsInfo(context.Context, *MetricsServiceRequest) (*GetMetricsInfoResponse, error)
	RpcGetStats(context.Context, *MetricsServiceRequest) (*GetStatsResponse, error)
	RpcGetNodeConfig(context.Context, *MetricsServiceRequest) (*GetNodeConfigResponse, error)
	RpcSetNodeConfig(context.Context, *SetNodeConfigRequest) (*GetNodeConfigResponse, error)
}

// UnimplementedMetricServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetricServiceServer struct {
}

func (*UnimplementedMetricServiceServer) RpcGetMetricsInfo(context.Context, *MetricsServiceRequest) (*GetMetricsInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetMetricsInfo not implemented")
}
func (*UnimplementedMetricServiceServer) RpcGetStats(context.Context, *MetricsServiceRequest) (*GetStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetStats not implemented")
}
func (*UnimplementedMetricServiceServer) RpcGetNodeConfig(context.Context, *MetricsServiceRequest) (*GetNodeConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetNodeConfig not implemented")
}
func (*UnimplementedMetricServiceServer) RpcSetNodeConfig(context.Context, *SetNodeConfigRequest) (*GetNodeConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcSetNodeConfig not implemented")
}

func RegisterMetricServiceServer(s *grpc.Server, srv MetricServiceServer) {
	s.RegisterService(&_MetricService_serviceDesc, srv)
}

func _MetricService_RpcGetMetricsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcGetMetricsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcGetMetricsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcGetMetricsInfo(ctx, req.(*MetricsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_RpcGetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcGetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcGetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcGetStats(ctx, req.(*MetricsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_RpcGetNodeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcGetNodeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcGetNodeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcGetNodeConfig(ctx, req.(*MetricsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_RpcSetNodeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcSetNodeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcSetNodeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcSetNodeConfig(ctx, req.(*SetNodeConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.MetricService",
	HandlerType: (*MetricServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcGetMetricsInfo",
			Handler:    _MetricService_RpcGetMetricsInfo_Handler,
		},
		{
			MethodName: "RpcGetStats",
			Handler:    _MetricService_RpcGetStats_Handler,
		},
		{
			MethodName: "RpcGetNodeConfig",
			Handler:    _MetricService_RpcGetNodeConfig_Handler,
		},
		{
			MethodName: "RpcSetNodeConfig",
			Handler:    _MetricService_RpcSetNodeConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/yahuizhan/dappley-metrics-go-api/rpc/pb/rpc.proto",
}
